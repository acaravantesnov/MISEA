#include "xparameters.h"
#include "xscugic.h"
#include "xil_exception.h"

XScuGic IntcInstance;

// Use this function to initialize SCUGIC
int ScuGic_Initialize (XScuGic *IntcInstancePtr)
{
	int Status;
	XScuGic_Config *IntcConfig;

	// Looks up the device configuration
	IntcConfig = XScuGic_LookupConfig (XPAR_SCUGIC_SINGLE_DEVICE_ID);
	if (IntcConfig == NULL)
		return XST_FAILURE;
	// Initializes the XScuGic structure
	Status = XScuGic_CfgInitialize (IntcInstancePtr, IntcConfig, IntcConfig->CpuBaseAddress);
	if (Status != XST_SUCCESS)
		return XST_FAILURE;
	return XST_SUCCESS;
}

// Use this function to configure exceptions
int SetUpExceptions (XScuGic *XScuGicInstancePtr)
{
	// Connect XScuGic default interrupt handler
	Xil_ExceptionRegisterHandler (XIL_EXCEPTION_ID_INT, // Exception ID (IRQ)
	(Xil_ExceptionHandler) XScuGic_InterruptHandler, // Generic handler
	XScuGicInstancePtr); // Pointer to XScuGic instance
	Xil_ExceptionEnable (); //Enable interrupts
	return XST_SUCCESS;
}

int main(void)
{
	XScuGic_SetPriorityTriggerType(&IntcInstance, 0, 3);

}
